/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pixelshop;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.FontFormatException;
import java.io.File;
import java.io.IOException;
import javax.swing.JFrame;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author redmibook
 */
public class KategoriView extends javax.swing.JFrame {

    /**
     * Creates new form DashKepala
     */
    public KategoriView() {
        setTitle("Fixed Size Window");

        // Set fixed window size
        setSize(1440, 720); // Width = 800px, Height = 600px

        // Center the window on the screen
        setLocationRelativeTo(null);

        // Disable resizing
        setResizable(false);

        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(true);
        initComponents();
        loadCategories();
        try {
            // Load custom font
            Font Text = Font.createFont(Font.TRUETYPE_FONT, new File("src/fonts/DeterminationSansWebRegular-369X.ttf")).deriveFont(28f);
            Font DialogText = Font.createFont(Font.TRUETYPE_FONT, new File("src/fonts/DeterminationSansWebRegular-369X.ttf")).deriveFont(18f);
            Font bubble = Font.createFont(Font.TRUETYPE_FONT, new File("src/fonts/DeterminationSansWebRegular-369X.ttf")).deriveFont(25f);
            Font Heading = Font.createFont(Font.TRUETYPE_FONT, new File("src/fonts/DeterminationSansWebRegular-369X.ttf")).deriveFont(50f);
            Bubble.setBorder(BorderFactory.createEmptyBorder());
            jScrollPane1.getViewport().setOpaque(false);   
            Bubble.setFont(bubble);
            Edit.setFont(Text);
            Cancel.setFont(Text);
            Add.setFont(Text);
            Delete.setFont(Text);

            jList1.setCellRenderer(new DefaultListCellRenderer() {
                public Component getListCellRendererComponent(JList<?> list, Object value, int index,
                        boolean isSelected, boolean cellHasFocus) {
                    JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                    String originalText = value.toString();
                    label.setText("* " + originalText);
                    if (isSelected) {
                        label.setBackground(Color.BLACK);
                        label.setForeground(Color.YELLOW);
                    } else {
                        label.setBackground(Color.BLACK); // Custom selected bg
                        label.setForeground(Color.WHITE);

                    }
                    label.setFont(Text);
                    label.setBorder(null);
                    return label;
                }
            });

        } catch (FontFormatException | IOException e) {
            e.printStackTrace();
        }

    }
private void loadCategories() {
    Connection conn = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;
    try {
        conn = koneksi.getKoneksi();
        String sql = "SELECT nama, deskripsi FROM kategori";
        stmt = conn.prepareStatement(sql);
        rs = stmt.executeQuery();

        DefaultListModel<String> model = new DefaultListModel<>();

        while (rs.next()) {
            String nama = rs.getString("nama");
            String deskripsi = rs.getString("deskripsi");
            model.addElement(nama); // tampilkan nama + deskripsi
        }

        jList1.setModel(model);

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat kategori dari database.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    // Tidak ada finally untuk menutup koneksi, stmt, atau rs
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Cancel = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Bubble = new javax.swing.JTextArea();
        Add = new javax.swing.JButton();
        CategoryList = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        DialogBox = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1440, 720));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Cancel.setBackground(new java.awt.Color(255, 255, 255,0));
        Cancel.setFont(new java.awt.Font("Rubik", 0, 24)); // NOI18N
        Cancel.setForeground(new java.awt.Color(255, 255, 255));
        Cancel.setText("* BACK");
        Cancel.setBorder(null);
        Cancel.setBorderPainted(false);
        Cancel.setFocusPainted(false);
        Cancel.setFocusable(false);
        Cancel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Cancel.setOpaque(false);
        Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CancelMouseExited(evt);
            }
        });
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        jPanel1.add(Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 620, 240, 30));

        Edit.setBackground(new java.awt.Color(255, 255, 255,0));
        Edit.setFont(new java.awt.Font("Rubik", 0, 24)); // NOI18N
        Edit.setForeground(new java.awt.Color(255, 255, 255));
        Edit.setText("* EDIT KATEGORI");
        Edit.setBorder(null);
        Edit.setBorderPainted(false);
        Edit.setFocusPainted(false);
        Edit.setFocusable(false);
        Edit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Edit.setOpaque(false);
        Edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditMouseExited(evt);
            }
        });
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        jPanel1.add(Edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 570, 220, 20));

        Delete.setBackground(new java.awt.Color(255, 255, 255,0));
        Delete.setFont(new java.awt.Font("Rubik", 0, 24)); // NOI18N
        Delete.setForeground(new java.awt.Color(255, 255, 255));
        Delete.setText("DELETE");
        Delete.setBorder(null);
        Delete.setBorderPainted(false);
        Delete.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Delete.setOpaque(false);
        Delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DeleteMouseExited(evt);
            }
        });
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 590, 100, 20));

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0, 0));
        jScrollPane1.setBorder(null);
        jScrollPane1.setEnabled(false);
        jScrollPane1.setFocusable(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.setRequestFocusEnabled(false);
        jScrollPane1.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setWheelScrollingEnabled(false);

        Bubble.setEditable(false);
        Bubble.setBackground(new Color(0, 0, 0, 0));
        Bubble.setColumns(5);
        Bubble.setForeground(new java.awt.Color(255, 255, 255));
        Bubble.setLineWrap(true);
        Bubble.setRows(2);
        Bubble.setText("...");
        Bubble.setWrapStyleWord(true);
        Bubble.setAutoscrolls(false);
        Bubble.setFocusable(false);
        Bubble.setOpaque(false);
        Bubble.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(Bubble);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 320, 280, 120));

        Add.setBackground(new java.awt.Color(255, 255, 255,0));
        Add.setFont(new java.awt.Font("Rubik", 0, 24)); // NOI18N
        Add.setForeground(new java.awt.Color(255, 255, 255));
        Add.setText("* ADD KATEGORI");
        Add.setBorder(null);
        Add.setBorderPainted(false);
        Add.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Add.setOpaque(false);
        Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddMouseExited(evt);
            }
        });
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        jPanel1.add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 520, 200, 20));

        CategoryList.setBorder(null);

        jList1.setBackground(new java.awt.Color(0, 0, 0));
        jList1.setForeground(new java.awt.Color(255, 255, 255));
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "ITem 3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        CategoryList.setViewportView(jList1);

        jPanel1.add(CategoryList, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 210, 470));

        DialogBox.setBackground(new Color(0, 0, 0, 0));
        DialogBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pixelshop/dialouge box lg.png"))); // NOI18N
        DialogBox.setText("jLabel3");
        jPanel1.add(DialogBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, -1));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pixelshop/ezgif-30a76e94aefd66.gif"))); // NOI18N
        jPanel1.add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, 720));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1440, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseEntered
        // TODO add your handling code here:
        Cancel.setForeground(new java.awt.Color(255, 239, 0));
    }//GEN-LAST:event_CancelMouseEntered

    private void CancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseExited
        // TODO add your handling code here:
        Cancel.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_CancelMouseExited

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
        new admin().show();
        this.dispose();
    }//GEN-LAST:event_CancelActionPerformed

    private void EditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditMouseEntered
        // TODO add your handling code here:
        Edit.setForeground(new java.awt.Color(255, 239, 0));
    }//GEN-LAST:event_EditMouseEntered

    private void EditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditMouseExited
        // TODO add your handling code here:
        Edit.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_EditMouseExited

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
String selectedCategory = jList1.getSelectedValue();
if (selectedCategory == null) {
    Bubble.setText("What are you trying to edit?..");
    return;
}

// Ambil deskripsi lama dari database berdasarkan nama kategori terpilih
String currentDescription = "";
Connection conn = null;
PreparedStatement ps = null;
ResultSet rs = null;
try {
    conn = koneksi.getKoneksi();
    String query = "SELECT deskripsi FROM kategori WHERE nama = ?";
    ps = conn.prepareStatement(query);
    ps.setString(1, selectedCategory);
    rs = ps.executeQuery();
    if (rs.next()) {
        currentDescription = rs.getString("deskripsi");
    }
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Gagal mengambil deskripsi kategori.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
} finally {
    try {
        if (rs != null) rs.close();
        if (ps != null) ps.close();
        // jangan tutup koneksi di sini jika kamu mau koneksi tetap terbuka
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

// Input nama baru (default value dari selectedCategory)
String newCategoryName = JOptionPane.showInputDialog(this, "New name for Kategori:", selectedCategory);

// Input deskripsi baru (default value dari currentDescription)
String newDescription = JOptionPane.showInputDialog(this, "New description for Kategori:", currentDescription);

if (newCategoryName != null && !newCategoryName.trim().isEmpty()
        && newDescription != null && !newDescription.trim().isEmpty()) {

    // Check if both name and description are unchanged
    if (newCategoryName.trim().equals(selectedCategory) && newDescription.trim().equals(currentDescription)) {
        Bubble.setText("...Are you planning to change anything in the first place?");
        return;  // exit without updating
    }

    try {
        // pakai koneksi baru atau sama, tergantung manajemen koneksi kamu
        conn = koneksi.getKoneksi();
        String sql = "UPDATE kategori SET nama = ?, deskripsi = ? WHERE nama = ?";
        ps = conn.prepareStatement(sql);
        ps.setString(1, newCategoryName.trim());
        ps.setString(2, newDescription.trim());
        ps.setString(3, selectedCategory);

        int rows = ps.executeUpdate();

        if (rows > 0) {
            Bubble.setText("Great, update succeed.");
            loadCategories();
        } else {
            Bubble.setText("Hm? Seems like the category is gone?");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memperbarui kategori.", "Error", JOptionPane.ERROR_MESSAGE);
        Bubble.setText("Oh.. it failed..?");
    } finally {
        try {
            if (ps != null) ps.close();
            // jangan tutup koneksi di sini jika kamu mau koneksi tetap terbuka
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

    }//GEN-LAST:event_EditActionPerformed

    private void AddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMouseEntered
        // TODO add your handling code here:
        Add.setForeground(new java.awt.Color(255, 239, 0));
    }//GEN-LAST:event_AddMouseEntered

    private void AddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMouseExited
        // TODO add your handling code here:
        Add.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_AddMouseExited

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        new KategoriAddForm().show();
        this.dispose();
    }//GEN-LAST:event_AddActionPerformed

    private void DeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteMouseEntered
        // TODO add your handling code here:
        Delete.setForeground(new java.awt.Color(255, 239, 0));
    }//GEN-LAST:event_DeleteMouseEntered

    private void DeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteMouseExited
        // TODO add your handling code here:
        Delete.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_DeleteMouseExited

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
    // Ambil nilai kategori yang dipilih sebagai String
String selectedCategory = jList1.getSelectedValue();
if (selectedCategory == null) {
    Bubble.setText("What are YOU trying to delete???");
    return;
}

int confirm = JOptionPane.showConfirmDialog(this,
        "DELETE \"" + selectedCategory + "\"?",
        "Proceed.", JOptionPane.YES_NO_OPTION);

if (confirm == JOptionPane.YES_OPTION) {
    Connection conn = null;
    PreparedStatement stmt = null;
    try {
        conn = koneksi.getKoneksi();
        String sql = "DELETE FROM kategori WHERE nama = ?";
        stmt = conn.prepareStatement(sql);
        stmt.setString(1, selectedCategory);  // parameter index 1, pakai selectedCategory langsung

        int rows = stmt.executeUpdate();

        if (rows > 0) {
           Bubble.setText("It's now gone.");
            loadCategories();
        } else {
            Bubble.setText("What are YOU... sigh.. choose first.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        Bubble.setText("It's on YOU. Something went wrong.");
    } finally {
        try {
            if (stmt != null) stmt.close();
            // Tidak menutup koneksi di sini
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}


    }//GEN-LAST:event_DeleteActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged


    }//GEN-LAST:event_jList1ValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KategoriView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KategoriView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KategoriView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KategoriView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KategoriView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JLabel Background;
    private javax.swing.JTextArea Bubble;
    private javax.swing.JButton Cancel;
    private javax.swing.JScrollPane CategoryList;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel DialogBox;
    private javax.swing.JButton Edit;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
